#!/usr/bin/env python

import os
import glob

Import('env')
Import('env_modules')

nvcc_path = ARGUMENTS.get("nvcc_path", "")
cuda_lib = ARGUMENTS.get("cuda_lib", "")

env_flex = env_modules.Clone()

# Compile cuda files
nvcc_flags = "-O3"

if env['target']=="debug":
    nvcc_flags += " -g "

if nvcc_path != "":
    nvcc_path += "/"

env_flex.cuda_sources = files = glob.glob("./godot_flex_ext/*.cu")
env_flex.object_cuda_sources = []
for cuda_file in env_flex.cuda_sources:
    object_cuda_file = os.path.splitext(cuda_file)[0] + ".o"
    env_flex.object_cuda_sources.append(object_cuda_file)
    status = Execute(nvcc_path + "nvcc " + nvcc_flags + " -I../../ --compile " + cuda_file + " -o " + object_cuda_file)
    if 0 != status:
        env.Exit(1)

# Add compiled cuda to library
env.Prepend(LIBS=["-l:collision_verifier.o"])
env.Prepend(LIBPATH=["#/modules/flex/godot_flex_ext"])

flex_base = "#thirdparty/flex"
flex_lib = flex_base + "/lib"
flex_include = flex_base + "/include"
flex_core = flex_base + "/core"

# TODO change according to realease and debug version of godot
FLEX_LIBS = ["NvFlexDebugCUDA_x64", "NvFlexDeviceDebug_x64", "NvFlexExtDebugCUDA_x64"]

# TODO This is necessary in order to compile after Godot PR #20380
# Make sure to remove it and compile it correctly
env["LIBSUFFIXES"] = ""

# TODO make platform agnostic
env.Prepend(LIBS=["cudart"])
env.Prepend(LIBS=["-l:" + file_name + ".a" for file_name in FLEX_LIBS])
env.Prepend(LIBPATH=[flex_lib + "/linux64", cuda_lib])

if cuda_lib != "":
    env.Prepend(LIBPATH=[cuda_lib])

env_flex.Append(CPPPATH=[flex_include, flex_core])
env_flex.add_source_files(env.modules_sources, "*.cpp")
env.modules_sources.extend(["./flex/" + f for f in env_flex.object_cuda_sources])

